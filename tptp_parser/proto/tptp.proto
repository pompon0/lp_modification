syntax = "proto3";
package tptp;

message File {
  repeated Input input = 1;
  repeated Node nodes = 2;
}

enum Type {
  UNKNOWN = 0;

  PRED_EQ = 1; // 2
  PRED = 15; // custom
  TERM_FUN = 16; // custom
  TERM_VAR = 17; // 0

  FORM_NEG = 2; // 1
  FORM_OR = 3; // ?
  FORM_AND = 4; // ?
  FORM_IFF = 5; // 2
  FORM_IMPL = 6; // 2
  FORM_RIMPL = 7; // 2
  FORM_XOR = 8; // 2
  FORM_NOR = 9; // 2
  FORM_NAND = 10; // 2
  FORM_TRUE = 11; // 0
  FORM_FALSE = 12; // 0

  FORALL = 13; // 2
  EXISTS = 14; // 2
}

message Node {
  int32 id = 1;
  Type type = 2;
  int32 arity = 3; // present <=> type has custom arity
  string name = 4; // optional
}

// currently only FOF and CNF formulas are supported
message Input {
  enum Language {
    UNKNOWN_Language = 0;
    FOF = 1;
    CNF = 2;
  }
  enum Role {
    UNKNOWN = 0;
    AXIOM = 1;
    HYPOTHESIS = 2;
    DEFINITION = 3;
    ASSUMPTION = 4;
    LEMMA = 5;
    THEOREM = 6;
    COROLLARY = 7;
    CONJECTURE = 8;
    NEGATED_CONJECTURE = 9;
    PLAIN = 10;
    TYPE = 11;
    FI_DOMAIN = 12;
    FI_FUNCTORS = 13;
    FI_PREDICATES = 14;
  }
  
  string name = 1;
  Language language = 4;
  Role role = 2;
  repeated int32 formula = 3;
}

message ToolOutput {
  File file = 1;
  bool has_equality = 2;
}
